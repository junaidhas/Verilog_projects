module test_4X1_mux;

    reg [3:0] inp;
    reg [1:0] sel_in;
    wire op;
    
    
    mux_4X1 m1 (.inp(inp),.sel_in(sel_in),.op(op));
    
    initial begin
        $monitor ("inp=%b sel_in=%b op=%b", inp, sel_in, op);//$monitor will execute whenever there is
        // change in given signal and will print the values
        //repeat (30) begin
        //inp = $random; //$random - generates a 32 bit random value and as input is only 4 bit, a 4 bit num is assigned
        //sel_in = $random;
        inp = 4'b0001;
        sel_in = 2'b00;
        #1;
        if (op ==inp[sel_in])
            $display ("Design is corrrect");
        else
            $display ("Design is wrong");
            
        inp = ~inp;
        sel_in = sel_in;
        #1;
        if (op ==inp[sel_in])  $display ("Design is corrrect");
        else  $display ("Design is wrong");
          
        inp = ~inp;
        
        repeat (3) begin
            inp = inp<<1; // 0001, 0010, 0100, 1000
            sel_in = sel_in +1;  // 00, 01, 10, 11
            #1;
            if (op ==inp[sel_in])
            $display ("Design is corrrect");
            else
            $display ("Design is wrong");
            
            inp = ~inp;
            sel_in = sel_in;
            #1;
            if (op ==inp[sel_in])  $display ("Design is corrrect");
            else  $display ("Design is wrong");
            
            inp = ~inp;
            
        end  
        
    end 
endmodule